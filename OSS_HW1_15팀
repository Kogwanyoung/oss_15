제목 : 전자와 컴공의 필수 소프트웨어, Visual Studio
팀원 : 전자공학부/2020115968/고관영/Kogwanyoung
       전자공학부/(학번)/설성원/Salbo1203
       컴퓨터학부/(학번)/손영민/ymandu
       전자공학부/(학번)/신은영/eunyeong1
       컴퓨터학부/2019111424/이상현/19SangHyun


1. 개요 
: Visual Studio는 Microsoft에서 개발한 통합 개발 환경(IDE)으로, 주로 소프트웨어 개발을 위한 도구이다. 다양한 프로그래밍 언어를
지원하며, C#, VB.NET, C++, F#, JavaScript, Python 등 여러 언어로 애플리케이션을 개발할 수 있다. 주요 기능으로는 코드 편집기 및
AI 기반 코드 보조, 디버깅 도구, 버전 관리 통합 기능, 확장 기능 및 Live Share, 클라우드 통합 등이 있다. Visual Studio는 웹 애플
리케이션, 데스크톱 애플리케이션, 모바일 애플리케이션 등 다양한 플랫폼을 위한 개발을 지원하며, 특히 .NET 프레임워크와의 통합이 
강력하다. 또한, Visual Studio는 커뮤니티 버전, 프로페셔널 버전, 엔터프라이즈 버전 등 여러 에디션이 있어, 개인 개발자부터 대규모 
기업까지 다양한 사용자의 요구를 충족할 수 있다.


2. 라이선스 
1) Visual Studio 라이선스 종류와 조건
(1) Visual Studio Community
- 무료로 제공되며, 개인 개발자 및 소규모 팀(5명 이하)에서 사용할 수 있으며, 오픈소스 프로젝트, 학습 및 교육 목적으로 사용 가능하다.
- 상업적 사용 시 연간 수익이 $1,000,000 이하인 경우에만 사용 가능하다.

(2) Visual Studio Professional
- 유료 라이선스로, 중소 기업 및 전문 개발자에게 적합하다.
- 가격 : 월 $45
- 특징
① Azure DevOps (기본 플랜 포함)
② GitHub Enterprise 사용 가능
③ 개발 및 테스트 소프트웨어 제공

(3) Visual Studio Enterprise
- 대규모 기업을 위한 유료 라이선스이다.
- 가격 : 월 $250
- 특징
① Azure DevOps (기본 + 테스트 플랜 포함)
② GitHub Enterprise 사용 가능
③ Power BI Pro 포함
④ 더 많은 개발 및 테스트 도구와 서비스 제공

2) 오픈소스 라이선스
(1) MIT 라이선스 
: 매우 간단하고 자유로운 라이선스이다. 소스 코드를 수정하고 배포할 수 있으며, 상업적 사용도 가능하다.

(2) GNU GPL(General Public License) 
: 소스 코드를 수정하고 배포할 수 있지만, 수정된 코드도 동일한 라이선스 하에 배포해야 한다.

(3) Apache 라이선스
: 소스 코드의 사용, 수정, 배포를 허용하며, 상업적 사용도 가능하다. 특허권에 대한 조항이 포함되어 있다.

(4) BSD 라이선스
: 소스 코드의 사용과 배포를 허용하며, 수정된 코드에 대한 제한이 상대적으로 적다.


3. 주요기능 
1) 코드 편집기 & AI 기반 코드 보조

2) 디버깅 도구

3) 버전 관리 통합 기능
(1) 버전 관리 통합 기능이란? 
: 버전 관리 통합 기능은 Visual Studio가 Git과 같은 버전 관리 시스템(VCS, Version Control System)을 IDE 내에서 직접 지원하는 기능
이다. 이를 통해 개발자는 코드의 변경 이력을 관리하고, 여러 팀원과의 협업을 효율적으로 진행할 수 있다. Visual Studio는 Git뿐만 아니
라 Azure DevOps와 같은 다른 버전 관리 시스템도 지원한다.

(2) 주요 기능
① 소스 코드 버전 관리 : 사용자는 코드의 변경 사항을 커밋하여 특정 시점의 상태를 저장할 수 있다. 이를 통해 이전 버전으로 쉽게 되돌아
갈 수 있으며, 코드의 변경 이력을 추적할 수 있다.
② 변경 사항 비교 : Visual Studio는 현재 작업 중인 파일과 이전 커밋 간의 차이를 쉽게 비교할 수 있는 기능을 제공한다. 이를 통해 어떤 
변경이 있었는지 시각적으로 확인할 수 있다.
③ 브랜치 관리 : 브랜치를 생성하고 관리하는 기능을 제공한다. 각 브랜치는 독립적으로 개발이 가능하여 주요 코드에 영향을 주지 않고 기능
추가나 버그 수정을 할 수 있으며, 브랜치를 사용하여 개발 후 메인 코드에 통합할 수 있다.
④ 협업 및 팀 작업 : 팀원들이 각자의 브랜치에서 작업한 후, 코드 리뷰를 거쳐 메인 브랜치에 통합할 수 있어 팀원 간의 협업이 용이하다. 
Visual Studio는 이러한 리뷰 과정을 지원하는 도구들도 포함하고 있다.
⑤ GitHub 통합 : Visual Studio는 GitHub과의 통합 기능을 제공하여, GitHub 저장소에 직접 연결하여 코드 변경 사항을 푸시(업로드)하거나 
풀(다운로드)할 수 있다. GitHub Issues 및 Pull Requests를 관리할 수 있는 기능도 포함되어 있어, 프로젝트 관리가 한층 수월해진다.

(3) 장점
① 변경 이력 관리 : 코드의 모든 변경 사항을 기록하고 관리할 수 있어, 어떤 내용을 누가 어느 시점에 작성했는지 알 수 있다.
② 백업 및 복구 : 문제가 발생했을 때 특정 시점으로 쉽게 돌아갈 수 있기 때문에, 내용이 손실된 경우에도 복구할 수 있다.
③ 효율적인 팀 협업 : 팀원 간의 코드 리뷰와 변경 사항 공유가 용이해서, 프로젝트 품질을 높일 수 있다.

(4) 사용 방법 
① 프로젝트 생성 또는 열기 : Visual Studio를 열고 새 프로젝트를 생성하거나 기존 프로젝트를 연다.
② 버전 관리 시스템 설정 : Git 리포지토리를 초기화하려면, '팀 탐색기(Team Explorer)'에서 '새 리포지토리'를 선택하고, 기존 리포지토리를 
클론하려면, '팀 탐색기'에서 '클론'을 선택하고 URL을 입력한다.
③ 변경 사항 관리 : 코드 변경 후, '팀 탐색기'에서 변경 사항을 선택하여 변경된 파일을 확인한다. 변경 사항을 스테이징하고 커밋할 수 있다.
④ 브랜치 생성 및 관리 : '팀 탐색기'에서 브랜치를 선택하여 새로운 브랜치를 만들거나 기존 브랜치로 전환할 수 있다.
⑤ Pull Request 생성 : GitHub 또는 Azure DevOps와 통합된 경우, '팀 탐색기'에서 Pull Request를 생성하여 코드 리뷰를 요청할 수 있다.
⑥ 충돌 해결 : 코드 충돌이 발생하면, Visual Studio에서 제공하는 도구를 사용하여 충돌을 해결할 수 있다.

4) 확장 기능 & Live Share

5) 클라우드 통합 (Azure Integration)
